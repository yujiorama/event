#+TITLE:Think about UnitTest in 能楽ホール (#鹿駆動)
#+AUTHOR:Yuji Okazawa (released engineer)
#+EMAIL:yujiorama_at_gmail.com
#+OPTIONS: H:1
* こういう話は残念なのでしません
 - ウォーターフォールプロセスで *PG/PT* がひとまとめ!
 - 予想バグ数(with ステップ数)!
* ユニットテストで何を書く?
何故かいろいろあるので共通点を見つけます。
* [[http://ja.wikipedia.org/wiki/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%83%86%E3%82%B9%E3%83%88#.E5.8D.98.E4.BD.93.E3.83.86.E3.82.B9.E3.83.88.E3.81.A8.E7.B5.90.E5.90.88.E3.83.86.E3.82.B9.E3.83.88][Wikipediaに学ぶユニットテスト]]
#+BEGIN_QUOTE
単体テスト、あるいはユニットテストとは、メソッドなどの小さな単位で行うテストのことである。単体テストは、ホワイトボックス
テストを利用して行われる場合が多い。「Unit Testing」の略である「UT」と呼ばれることが多い。また、開発現場によっては
「CT（和製:Coding Test）」や「PT（和製:Program Test）」と略されることもある。
#+END_QUOTE
* [[http://msdn.microsoft.com/ja-jp/library/aa292197(VS.71(.aspx][MSDNに学ぶユニットテスト]]
#+BEGIN_QUOTE
単体テストの主な目標は、アプリケーションのテスト可能な最小ユニットを取り出して残りのコードから分離し、それが予定どおり
の動作をするかどうかを調べることです。まず各ユニットを個別にテストしてから、これらをモジュールに結合し、モジュール間の
インターフェイスをテストします。単体テストの間にかなりの割合の欠陥が識別されるため、単体テストは重要です。
#+END_QUOTE
* 小さな単位
 - 長大な処理の手続き(日本語)をそのままプロダクションコードにするとか...ありえませんよね?
 - *1 つの仕事をする* のが大事
 - *小さい* の認識を extreme にしよう!
* ホワイトボックステスト
 - 字義通りプロダクションコードの全てのパスを通すもの
 - 全パス網羅では「これ現実的にはあり得ないだろ」なんてパスもテストするんだそうな
#+ATTR_HTML: alt="小一時間問い詰めたい" width="100%"
[[http://stat.ameba.jp/user_images/20111126/03/yumekui776/fd/87/j/o0300029011634218009.jpg]]
* Mental Model of System Architecture (by 2 years ago)
レイヤードアークテクチャの誤解について 3 行で。
* The Unit is...

レイヤードアーキテクチャでのユニットとその問題について 3 行で。

* Mental Model of System Architecture (recently)

同心円アーキテクチャと ports パターン。

* The Unit is...

ドメインが話すことについて。

* Conclusion

まとめん。
